unit ServerMethodsUnit1;

interface

uses System.SysUtils, System.Classes, System.Json,
    DataSnap.DSProviderDataModuleAdapter,
    Datasnap.DSServer, Datasnap.DSAuth, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.PG,
  FireDAC.Phys.PGDef, FireDAC.VCLUI.Wait, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, Datasnap.Provider, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client;

type
  TServerMethods2 = class(TDSServerModule)
    PGTaxiConnection: TFDConnection;
    DriverTable: TFDQuery;
    DriverDSP: TDataSetProvider;
  private
    { Private declarations }
  public
    { Public declarations }
    function EchoString(Value: string): string;
    function ReverseString(Value: string): string;
    procedure CreateNewDriver(Login,Password, First_Name,Second_Name,Third_name,
           Car, Phone, Car_Sign: string);
  end;

implementation


{$R *.dfm}


uses System.StrUtils;

function TServerMethods2.EchoString(Value: string): string;
begin
  Result := Value;
end;

function TServerMethods2.ReverseString(Value: string): string;
begin
  Result := System.StrUtils.ReverseString(Value);
end;

procedure TServerMethods2.CreateNewDriver(Login: string; Password: string; First_Name: string; Second_Name: string; Third_name: string; Car: string; Phone: string; Car_Sign: string);
  var query : TFDQuery;
begin
  query := TFDQuery.Create(nil);
  query.Connection := PgtaxiConnection;

  with query do
  begin
  SQL.Add('INSERT INTO "Driver"("Login","Password","First_Name","Second_Name","Third_Name",' +
                '"Car","Phone","Car_Sign","Status") values(:Login,:Password,:First_Name, ' +
                ':Second_Name,:Third_Name,:Car,:Phone,:Car_Sign,:Status)');
  Params[0].Value := Login;
  Params[1].Value := Password;
  Params[2].Value := First_Name;
  Params[3].Value := Second_Name;
  Params[4].Value := Third_name;
  Params[5].Value := Car;
  Params[6].Value := Phone;
  Params[7].Value := Car_Sign;
  Params[8].Value := 1;

  ExecSQL;
  end;

end;

end.

